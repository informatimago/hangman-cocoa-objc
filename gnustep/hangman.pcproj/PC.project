{
    APPLICATIONICON = "icon.png";
    "APP_DOCUMENT_BASED" = NO;
    "APP_TYPE" = GORM;
    "BUILDER_TARGETS" = (
	all,
	install,
	uninstall,
	clean,
	distclean,
	dist
    );
    "CLASS_FILES" = (
	"Hangman.m",
	"HangmanController.m"
    );
    COMPILEROPTIONS = "";
    CPPOPTIONS = "";
    "CREATION_DATE" = "2012-05-04 02:15:36 +0200";
    "DOCU_FILES" = (
    );
    FRAMEWORKS = (
    );
    "HEADER_FILES" = (
	"Hangman.h",
	"HangmanController.h"
    );
    IMAGES = (
	"hung-0.png",
	"hung-1.png",
	"hung-10.png",
	"hung-11.png",
	"hung-2.png",
	"hung-3.png",
	"hung-4.png",
	"hung-5.png",
	"hung-6.png",
	"hung-7.png",
	"hung-8.png",
	"hung-9.png",
	"icon.png"
    );
    INSTALLDIR = "$(HOME)/GNUstep";
    INTERFACES = (
	"Main.gsmarkup",
	"MainMenu-GNUstep.gsmarkup",
	"MainMenu-OSX.gsmarkup",
	"hangman.gorm"
    );
    LANGUAGE = English;
    LIBRARIES = (
	"gnustep-base",
	"gnustep-gui"
    );
    LINKEROPTIONS = "";
    "LOCALIZED_RESOURCES" = (
    );
    MAININTERFACE = "hangman.gorm";
    MAKEFILEDIR = "$(GNUSTEP_MAKEFILES)";
    "OBJC_COMPILEROPTIONS" = "-std=c99";
    "OTHER_RESOURCES" = (
    );
    "OTHER_SOURCES" = (
	"hangman_main.m"
    );
    "PRINCIPAL_CLASS" = NSApplication;
    "PROJECT_AUTHORS" = (
	"Pascal J. Bourguignon"
    );
    "PROJECT_COPYRIGHT" = "Copyright (C) 2014 Pascal Bourguignon";
    "PROJECT_COPYRIGHT_DESC" = "Released under the AGPL3.";
    "PROJECT_CREATOR" = "Pascal J. Bourguignon";
    "PROJECT_DESCRIPTION" = "The classical hang man game.";
    "PROJECT_DOCUMENTTYPES" = (
    );
    "PROJECT_GROUP" = "No group avaliable!";
    "PROJECT_MAINTAINER" = "Pascal J. Bourguignon";
    "PROJECT_NAME" = hangman;
    "PROJECT_RELEASE" = "1.0";
    "PROJECT_SUMMARY" = "No summary avaliable!";
    "PROJECT_TYPE" = Application;
    "PROJECT_URL" = "";
    "SEARCH_HEADER_DIRS" = (
    );
    "SEARCH_LIB_DIRS" = (
    );
    SUBPROJECTS = (
    );
    "SUPPORTING_FILES" = (
	"GNUmakefile.preamble",
	GNUmakefile,
	"GNUmakefile.postamble",
	"hangmanInfo.plist"
    );
    "USER_LANGUAGES" = (
	AmericanEnglish,
	English
    );
}